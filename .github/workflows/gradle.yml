# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Grant execute permission for gradlew and build
      run: |
        chmod +x gradlew
        ./gradlew build
      
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
#    - name: init with Gradle
#      uses: gradle/gradle-build-action@v2
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: v0.7.0
    
    - name: Build with Gradle
      run: |
        cd ${{ github.workspace }}/githubActionTest
        chmod +x ./gradlew
        ./gradlew clean build -x test


    - name: Docker build & push to docker repo
      run: |
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker build -t jakeheon/githubaction -f Dockerfile .
          docker push jakeheon/githubaction

    - name: Build and deploy
      run: |
        echo "$SSH_PEM_KEY" >> $HOME/key.pem
        chmod 400 $HOME/key.pem
        ssh -i $HOME/key.pem -o StrictHostKeyChecking=no ubuntu@$SSH_KNOWN_HOSTS
        sudo docker rm -f $(docker ps -qa)
        docker-compose up -d
        docker image prune -f
#        sudo docker pull jakeheon/githubaction
#        sudo docker run -p 80:8080 jakeheon/githubaction
      env:
        SSH_PEM_KEY: ${{secrets.KEY}}
        SSH_KNOWN_HOSTS: ${{secrets.HOST}}


        
